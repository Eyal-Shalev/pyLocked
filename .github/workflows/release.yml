name: Release

env:
  TWINE_USERNAME: "__token__"
  TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}

on:
  workflow_dispatch:
    inputs:
      VERSION:
        type: string
        description: Valid SemVer version string
        required: true
  push:
    tags:
      - v*

permissions:
  contents: write

jobs:
  version:
    runs-on: ubuntu-latest
    steps:
      - name: Version from tag
        if: ${{ inputs.VERSION == '' }}
        run: echo "VERSION=${GITHUB_REF/refs\/tags\/v/}" >> $GITHUB_ENV
      - name: Version from input
        if: ${{ inputs.VERSION != '' }}
        run: echo "VERSION=${{ inputs.VERSION }}" >> $GITHUB_ENV
    outputs:
      version: ${{ env.VERSION }}

  build:
    runs-on: ubuntu-latest
    needs: [version]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.x"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install .[build]
      - name: Update version
        run: ./scripts/gen_version.py ${{ needs.version.outputs.version }}
      - name: Build
        run: python -m build
      - uses: actions/upload-artifact@v3
        with:
          name: dist
          path: dist

  publish:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.x"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install .[publish]
      - uses: actions/download-artifact@v3
        with:
          name: dist
          path: dist
      - name: "Publish"
        run: twine upload --repository pypi dist/*

  release:
    runs-on: ubuntu-latest
    needs: [build, version]
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: dist
          path: dist
      - uses: marvinpinto/action-automatic-releases@v1.2.1
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          title: Version ${{ needs.version.outputs.version }}
          automatic_release_tag: v${{ needs.version.outputs.version }}
          prerelease: false
          files: dist/*
